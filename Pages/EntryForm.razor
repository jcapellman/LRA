@page "/form/{coursetype}"

@using LRA.Enums
@using LRA.Models
@inject LRA.Services.MailService mService

<h3>Registration for @courseType</h3>

@if (status == FormSubmissionStatus.Submitted)
{
    <p>Thank you, your course registration has been received. Lookout for a follow up in the next 24-48 business hours.</p>
} else if (status == FormSubmissionStatus.Submitting)
{
    <p>Submitting Form...</p>
} else if (status == FormSubmissionStatus.Error)
{
    <p class="alert-danger">Sorry there was an error submitting your registration, please try again later.</p>
} else if (status == FormSubmissionStatus.Pending) {
    <EditForm Model="model" OnValidSubmit="HandleValidSubmit">
        <p>
            <label>
                Name<br/>
                <InputText @bind-Value="model.Name" />
            </label>

            <br/>

            <label>
                Email Address<br>
                <InputText @bind-Value="model.EmailAddress" />
            </label>

            <br/>

            <label>
                Phone Number<br>
                <InputText @bind-Value="model.PhoneNumber" />
            </label>

            <br/>

            <label>
                Preferred Contact Method<br>
                <InputSelect @bind-Value="model.PreferredMethod">
                    <option selected>Email</option>
                    <option>Phone Call</option>
                    <option>Text Message</option>
                </InputSelect>
            </label>
        </p>

	    <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
}

@code {
    private RegistrationModel model = new();

    private FormSubmissionStatus status;

    [Parameter]
	public string courseType { get; set; }

	protected override void OnInitialized()
    {
        status = FormSubmissionStatus.Pending;
        model.CourseType = courseType;
	}

    private async void HandleValidSubmit()
    {
        status = FormSubmissionStatus.Submitting;

        var result = await mService.SendEntryForm(model.Name, model.EmailAddress, model.CourseType, model.PhoneNumber, model.PreferredMethod);

        if (!result)
        {
            status = FormSubmissionStatus.Error;
        } else
        {
            status = FormSubmissionStatus.Submitted;
        }

        StateHasChanged();
    }
}